# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-01-26 12:56
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('client', '0001_initial'),
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('base', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='admin', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admins', to='client.Client')),
            ],
            options={
                'abstract': False,
            },
            bases=('users.baseuser',),
        ),
        migrations.CreateModel(
            name='Moderator',
            fields=[
                ('base', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='moderator', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderators', to='client.Client')),
                ('surrogate_admin', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surrogate_moderator', to='users.Admin')),
            ],
            options={
                'abstract': False,
            },
            bases=('users.baseuser',),
        ),
        migrations.CreateModel(
            name='Superadmin',
            fields=[
                ('base', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='superadmin', serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('users.baseuser',),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('base', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='user', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='client.Client')),
                ('surrogate_admin', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surrogate_user', to='users.Admin')),
                ('surrogate_moderator', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surrogate_user', to='users.Moderator')),
                ('surrogate_superadmin', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surrogate_user', to='users.Superadmin')),
                ('user_moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='users.Moderator')),
            ],
            options={
                'abstract': False,
            },
            bases=('users.baseuser',),
        ),
        migrations.AddField(
            model_name='baseuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='baseuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='moderator',
            name='surrogate_superadmin',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surrogate_moderator', to='users.Superadmin'),
        ),
        migrations.AddField(
            model_name='admin',
            name='surrogate_superadmin',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surrogate_admin', to='users.Superadmin'),
        ),
    ]
